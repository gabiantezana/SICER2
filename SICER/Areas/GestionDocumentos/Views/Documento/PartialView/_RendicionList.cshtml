@using SICER.HELPER
@using SICER.LOGIC.GestionDocumentos
@using SICER.MODEL
@model IEnumerable<SICER.VIEWMODEL.GestionDocumentos.DocumentoViewModel>

<table id="tableDetalle" class="table">
    <thead>
        <tr style="font-weight:bold">
            <td class=" text-right">#</td>
            <td>Proveedor</td>
            <td>Tipo</td>
            <td>Serie</td>
            <td>Correlativo</td>
            <td>Fecha</td>
            <td>Concepto</td>
            <td>Moneda doc</td>
            <td>Impuesto</td>
            <td>Total</td>
            <td>Estado</td>
            <td>Opciones</td>
        </tr>

    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr><td colspan="18">No existen registros aún</td></tr>
        }
        else
        {
            int num = 1;
            foreach (var item in Model)
            {
                <tr ondblclick="window.location ='@Url.Action("AddUpdate", "Documento", new { Area = ConstantHelper.Area.GESTIONDOCUMENTOS , documentoId=item.DocumentoId, documentType = (DocumentType)item.TipoDocumentoId })'">
                    <td>@num</td>
                    <td> @item.SapBusinessPartnerCardCode</td>
                    <td> @item.SapIndicatorCode</td>
                    <td> @item.Serie </td>
                    <td> @item.Correlativo </td>
                    <td> @item.FechaDocumento.ToShortDateString() </td>
                    <td> @item.SapConceptoCode</td>
                    <td> @item.SapMonedaDocCurrCode </td>
                    <td> @item.OstcCode </td>
                    <td> @item.Monto </td>
                    <td class="text-nowrap text-center">
                        @switch ((DocumentState)item.Estado)
                        {
                            case DocumentState.None:
                                <a class="btn btn-xs btn-icon btn-default" data-toggle="tooltip" data-original-title="@(((DocumentState)item.Estado).ToString())">
                                    <i class="icon wb-copy" aria-hidden="true"></i>Ninguno
                                </a>
                                break;
                            case DocumentState.Pendiente:
                                <a class="btn btn-xs btn-icon btn-warning" data-toggle="tooltip" data-original-title="@(((DocumentState)item.Estado).ToString())">
                                    <i class="icon wb-alert" aria-hidden="true"></i>Pendiente
                                </a>
                                break;
                            case DocumentState.Aprobado:
                                <a class="btn btn-xs btn-icon btn-success" data-toggle="tooltip" data-original-title="@(((DocumentState)item.Estado).ToString())">
                                    <i class="icon wb-check" aria-hidden="true"></i>Aprobado
                                </a>
                                break;
                            case DocumentState.Rechazado:
                                <a class="btn btn-xs btn-icon btn-danger" data-toggle="tooltip" data-original-title="@(((DocumentState)item.Estado).ToString())">
                                    <i class="icon wb-close" aria-hidden="true"></i>Rechazado
                                </a>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }

                    </td>
                    <td class="text-nowrap text-center">
                        <button type="button" class="btn btn-outline btn-default btn-xs btnModalDetalle" @Url.ModalHelperFor("ModalRendicion", "Documento", new { documentoId = item.DocumentoId }, ModalSize.Large) data-toggle="tooltip" data-original-title="Modificar"
                                data - id="@item.DocumentoId">
                            <i class="icon wb-pencil" aria - hidden="true"></i>
                        </button>
                       
                        @switch (item.ModoVistaDocumento)
                        {
                            case ModoVistaDocumento.Ver:
                                break;
                            case ModoVistaDocumento.Crear:
                                break;
                            case ModoVistaDocumento.Modificar:
                                break;
                            case ModoVistaDocumento.Aprobar:
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }

                    </td>
                    <td>
                        <input type="checkbox" class="" />
                    </td>
                </tr>
                num++;
            }
        }
    </tbody>
</table>
@section Scripts
{
    <script>

    </script>

}
<style>
    .table-condensed > tbody > tr > td, .table-condensed > tbody > tr > th, .table-condensed > tfoot > tr > td, .table-condensed > tfoot > tr > th, .table-condensed > thead > tr > td, .table-condensed > thead > tr > th {
        padding: 4px;
    }

    /*div[role='tooltip'] {
        position:relative;
        z-index:1;
    }*/
</style>
